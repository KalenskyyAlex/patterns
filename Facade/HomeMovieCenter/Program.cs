using System;
// Патерн-фасад спрощує інтерфейс для клієнта, охоплюючи групу інтерфейсів. Не зважаючи на це, клієнт все ще
// має доступ до кожного окремого інтерфейсу, якщо в нього є така потреба.
//
// Переваги: 
// - спрощує роботу для клієнта
// - може вводити додаткову логіку для групи інтерфейсів, як декоратор
// - "розв'язує" групу інтерфейсів та клієнт.
// Недоліки: 
// - я не знайшов

// ЛЕГЕНДА
// Треба запрограмувати домашню станцію-кінотеатр. Вона включає телевізор(як не дивно), двд-плеєр(бо ми в 90-х)
// регулювання світла та аудіосистему. Спробуємо подивитися фільм:
// 1. Спочатку приглушити світло одним пультом
// 2. Потім увімкнути телевізор іншим пультом
// 3. Увімкнуити двд-плеєр зовсім третім пультом
// 4. Увімкнути аудіо систему
// 5. Налаштувати звук
// 6. Обрати фільм
// 7. Запустити
// Досить складно. Що як, натомість, ми матимемо:
// 1. Подивитися обраний фільм (одним натисканням кнопки)
// 2. ВСЕ
//
// Так набагато краще? Для цього існує патерн-фасад. Ми згрупуємо список дій, можливо додамо до цього якусь логіку
// та дамо користувачу простий і зрозумілий інтерфейс. Але користувач все ще зможе взаємодіяти з окремими елементами
// якщо забажає

//Тестовий модуль
namespace HomeMovieCenter
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Test 1");
            // Як би це могло виглядати:
            Lights lights = new Lights();
            lights.on();
            lights.dim(10);
            TV tv = new TV();
            tv.on();
            DVD dvd = new DVD();
            dvd.on();
            AudioSystem audioSystem = new AudioSystem();
            audioSystem.on();
            audioSystem.setVolume(30);
            dvd.play("Pacific Rim");
            // Дуууже довго, і щоб вимкнути на доведеться повторити все ЗНОВУ тільки в оберненому порядку
            Console.WriteLine("Test 2");
            // Із застосуванням "фасаду"
            Facade facade = new Facade(lights, dvd, audioSystem, tv);
            facade.prepareForWatching("Pacific Rim"); // довга послідовність дій однією командою
            lights.dim(5); // ми все ще маємо доступ до окремих елементів, якщо знадобиться
            facade.stopWatching();
        }
    }
}
